name: Build Qt CMake Project

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-macos:
    name: Build on macOS
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Install Homebrew dependencies
        run: |
          brew install cmake pkg-config nasm yasm x264 x265 opencv
          echo "OPENCV_ROOT_PATH=$(brew --prefix opencv)" >> $GITHUB_ENV
          export OPENCV_ROOT_PATH=$(brew --prefix opencv)

      - name: Download 3rd_party
        run: |
          curl -L -o 3rd_party.tar.gz https://github.com/Areay7/LearnCode/releases/download/v1.1.1/3rd_party.tar.gz
          tar -xzf 3rd_party.tar.gz

      - name: Build FFmpeg 4.4.5
        run: |
          if [ ! -d "ffmpeg" ]; then
            wget https://ffmpeg.org/releases/ffmpeg-4.4.5.tar.bz2
            tar xjvf ffmpeg-4.4.5.tar.bz2
            (
              cd ffmpeg-4.4.5 && \
              ./configure --pkg-config-flags=--static --enable-shared --disable-static --extra-libs=-lpthread --extra-libs=-lm \
              --enable-gpl --enable-nonfree --enable-libx264 --enable-libx265 --enable-postproc \
              --prefix=$(pwd)/../ffmpeg
            )
            (
              cd ffmpeg-4.4.5 && \
              make -j$(sysctl -n hw.ncpu) && \
              make install
            )
          fi
          echo "FFMPEG_ROOT_PATH=$(pwd)/ffmpeg" >> $GITHUB_ENV

      - name: Install Qt 6.5.3 with modules
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.3'
          target: 'desktop'
          arch: 'clang_64'
          modules: 'qt5compat qtmultimedia'

      - name: Configure project
        run: |
          mkdir build && cd build
          cmake ../ToolKit \
            -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
            -DCMAKE_PREFIX_PATH="$Qt6_DIR" \
            -DFFMPEG_ROOT="$FFMPEG_ROOT_PATH" \
            -DOPENCV_ROOT="$OPENCV_ROOT_PATH"

      - name: Build
        run: |
          cd build
          make -j$(sysctl -n hw.ncpu)

  build-linux:
    name: Build on Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake pkg-config git curl tar \
            libx11-dev libgl1-mesa-dev libpulse-dev \
            yasm nasm libx264-dev libx265-dev libnuma-dev \
            libgtk-3-dev libjpeg-dev libpng-dev libtiff-dev \
            libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
            libeigen3-dev libtbb-dev

      - name: Download and Build FFmpeg 4.4.5
        run: |
          wget https://ffmpeg.org/releases/ffmpeg-4.4.5.tar.bz2
          tar xjvf ffmpeg-4.4.5.tar.bz2
          mkdir ffmpeg && cd ffmpeg-4.4.5
          ./configure \
            --enable-shared \
            --disable-static \
            --enable-gpl \
            --enable-nonfree \
            --enable-libx264 \
            --enable-libx265 \
            --enable-postproc \
            --prefix=$(pwd)/../ffmpeg
          make -j$(nproc)
          make install
          cd ..
          echo "FFMPEG_ROOT_PATH=$(pwd)/ffmpeg" >> $GITHUB_ENV

      - name: Download and Build OpenCV 4.4.0
        run: |
          git clone --branch 4.4.0 https://github.com/opencv/opencv.git
          git clone --branch 4.4.0 https://github.com/opencv/opencv_contrib.git
          mkdir -p opencv/build && cd opencv/build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=$(pwd)/../../opencv-install \
            -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_TESTS=OFF \
            -DBUILD_PERF_TESTS=OFF \
            -DWITH_GTK=OFF
          make -j$(nproc)
          make install
          cd ../..
          echo "OPENCV_ROOT_PATH=$(pwd)/opencv-install" >> $GITHUB_ENV

      - name: Install Qt 6.5.3 with modules
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.3'
          target: 'desktop'
          arch: 'gcc_64'
          modules: 'qt5compat qtmultimedia qtmqtt'

      - name: Clone and Build QtMqtt 6.5.3
        run: |
          git clone --branch v6.5.3 https://github.com/qt/qtmqtt.git
          mkdir -p qtmqtt/build && cd qtmqtt/build
          cmake .. \
            -DCMAKE_PREFIX_PATH="$Qt6_DIR" \
            -DCMAKE_INSTALL_PREFIX=$(pwd)/../../qtmqtt-install \
            -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          make install
          cd ../..
          echo "MQTT_ROOT=$(pwd)/qtmqtt-install" >> $GITHUB_ENV

      - name: Configure ToolKit
        run: |
          mkdir build && cd build
          cmake ../ToolKit \
            -DCMAKE_PREFIX_PATH="$Qt6_DIR" \
            -DFFMPEG_ROOT="$FFMPEG_ROOT_PATH" \
            -DOPENCV_ROOT="$OPENCV_ROOT_PATH" \
            -DMQTT_ROOT="$MQTT_ROOT"

      - name: Build ToolKit
        run: |
          cd build
          make -j$(nproc)

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download 3rd_party
        run: |
          curl -L -o 3rd_party.tar.gz https://github.com/Areay7/LearnCode/releases/download/v1.1.1/3rd_party.tar.gz
          tar -xzf 3rd_party.tar.gz

      - name: Install Qt 6.5.3 with modules
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.3'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qt5compat qtmultimedia'

      - name: Enable MSVC Developer Environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure and Build
        run: |
          mkdir build
          cd build
          cmake ../ToolKit -DCMAKE_PREFIX_PATH="%Qt6_DIR%" -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
